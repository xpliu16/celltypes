Command palette - Ctrl+Shift+P
Extensions view - Ctrl+Shift+X - search bar e.g., @installed python debugger
Search entire folder - Ctrl+Shift+F

Initialize debugger - F5, select "Python File"
Variables show up in panel on the left
Set breakpoint - place cursor on line and press F9

>Python: Select Interpreter  (select your conda environment)
>Python: Restart language server  (after installing new library in interactive mode)

python -m pip install --upgrade debugpy    (into environment - myabe not needed)
Enable Python debugger extension
To set up debugging go to Run -> Create Configuration to make a launch.json and add last two lines
    "configurations": [
        {"name": "Python: Debug Current File",
         "type":"python",
         "request": "launch",
         "program": "${file}",
         "console": "integratedTerminal",
         "stopOnEntry": true,
         "justMyCode": false
        }
    ]

Set working directory by using open folder / close folder, but it'll close out all the currently open files

# %% To get an interactive block in .py file
Right click within code and select Run in Interactive Window
Shift+enter

Increase RAM: File -> Preferences -> Settings type files.maxMemoryForLargeFilesMB

#%matplotlib ipympl   # For Jupyter notebook, to get interactive plots